;
;
;
;	Title		Binary to decimal ASCII
;	Name:		BN2DEC
;
;
;	Purpose:	Convert a 16-bit signed binary number
;			to ASCII data
;
;	Entry:		Register H = High byte of output buffer address
;			Register L = Low byte of output buffer address
;			Register D = High byte of value to convert
;			Register E = Low byte of value to convert
;
;	Exit:		The first byte of the buffer is the length,
;			followed by the characters.
;
;	Registers used:	AF, BC, DE, HL
;
;	Time:		Approximately 7,200 cycles
;
;	Size:		Program 107 bytes
;			Data	  4 bytes
;
;

BN2DEC:
	;SAVE PARAMETERS
	LD	(BUFPTR),HL	;STORE THE BUFFER POINTER
	EX	DE,HL
	LD	A,0
	LD	(CURLEN),A	;CURRENT BUFFER LENGTH IS 0
	LD	A,H
	LD	(NGFLAG),A	;SAVE SIGN OF VALUE
	OR	A		;SET FLAGS FROM VALUE
	JP	P,CNVERT	;JUMP IF VALUE IS POSITIVE
	EX	DE,HL		;ELSE TAKE ABSOLUTE VALUE (0 - VALUE)
	LD	HL,0
	OR	A		;CLEAR CARRY
	SBC	HL,DE		;SUBTRACT VALUE FROM 0

	;CONVERT VALUE TO A STRING
CNVERT:
	;HL := HL DIV 10 (DIVIDEND,QUOTIENT)
	;DE := HL MOD 10 (REMAINDER)
	LD	E,0		;REMAINDER = 0
	LD	B,16		;16 BITS IN DIVIDEND
	OR	A		;CLEAR CARRY TO START
DVLOOP:
	;SHIFT THE NEXT BIT OF THE QUOTIENT INTO BIT 0 OF THE DIVIDEND
	;SHIFT NEXT MOST SIGNIFICANT BIT OF DIVIDEND INTO
	;  LEAST SIGNIFICANT BIT OF REMAINDER
	;HL HOLDS BOTH DIVIDEND AND QUOTIENT. QUOTIENT IS SHIFTED
	;  IN AS THE DIVIDEND IS SHIFT OUT.
	;E IS THE REMAINDER.

	;DO A 24-BIT SHIFT LEFT, SHIFTING
	;  CARRY TO L, L RO H, H TO E
	RL	L		;CARRY (NEXT BIT OF QUOTIENT) TO BIT 0
	RL 	H		;SHIFT HIGH BYTE
	RL	E		;SHIFT NEXT BIT OF DIVIDEND

	;IF REMAINDER IS 10 OR MORE, NEXT BIT OF
	;  QUOTIENT IS 1 (THIS BIT IS PLACED IN CARRY)
	LD	A,E
	SUB	10		;SUBTRACT 10 FROM REMAINDER
	CCF			;COMPLEMENT CARRY
				; (THIS IS NEXT BIT OF QUOTIENT)
	JR	NC,DECCNT	;JUMP IF REMAINDER IS LESS THAN 10
	LD	E,A		;OTHERWISE REMAINDER = DIFFERENCE
				;  BETWEEN PREVIOSU REMAINDER AND 10

DECCNT:
	DJNZ	DVLOOP		; CONTINUE UNTIL ALL NITS ARE DONE

	;SHIFT LAST CARRY INTO QUOTIENT
	RL	L		;LAST BIT OF QUOTIENT TO BIT 0
	RL	H

	;INSERT THE NEXT CHARACTER IN ASCII
CHINS:
	LD	A,E
	ADD	A,'0'		;CONVERT 0...9 TO ASCII '0'...'9'
	CALL	INSERT

	;IF QUOTIENT IS NOT 0 THEN KEEP DIVIDING
	LD	A,H
	OR	L
	JR	NZ,CNVERT

EXIT:
	LD	A,(NGFLAG)
	OR	A
	JP	P,POS		;BRANCH IF ORIGINAL VALUE WAS POSITIVE
	LD	A,'-'		;ELSE
	CALL	INSERT		; PUT A MINUS SIGN IN FRONT

POS:	RET			;RETURN

	;------------------------------------------------
	;SUBROUTINE: INSERT
	;PURPOSE:  INSERT THE CHARACTER IN REGISTER A AT THE
	;	   FRONT OF THE BUFFER
	;ENTRY:  CURLEN = LENGHT OF BUFFER
	;	 BUFPTR = CURRENT ADDRESS OF LAST CHARACTRER IN BUFFER
	;EXIT:  REGISTER A INSERTED IMMEDIATELY AFTER LENGTH BYTE
	;REGISTERS USED: AF,B,C,D,E
	;-------------------------------------------------
INSERT:
	PUSH	HL		;SAVE HL
	PUSH	AF		;SAVE CHARACTER TO INSERT

	;MOVE ENTIRE BUFFER UP 1 BYTE IN MEMORY
	LD	HL,(BUFPTR)	;GET BUFFER POINTER
	LD	D,H		;HL = SOURCE (CURRENT END OF BUFFER)
	LD 	E,L
	INC	DE		;DE = DESTINATION (CURRENT END + 1)
	LD	(BUFPTR),DE	;STORE NEW BUFFER POINTER
	LD	A,(CURLEN)
	OR	A		;TEST FOR CURLEN = 0
	JR	Z,EXITMR	;JUMP IF ZERO (NOTHING TO MOVE,
				; JUST STORE THE CHARACTER)
	LD	C,A		;BC = LOOP COUNTER
	LD	B,0
	LDDR			;MOVE ENTIRE NUFFER UP 1 BYTE

EXITMR:
	LD	A,(CURLEN)	;INCREMENT CURRENT LENGTH BY 1
	INC	A
	LD	(CURLEN),A
	LD	(HL),A		;UPDATE LENGTH BYTE OF BUFFER
	EX	DE,HL		;HL POINTS TO FIRST CHARACTER IN BUFFER
	POP	AF		;GET CHARACTER TO INSERT
	LD	(HL),A		;INSERT CHARACTER AT FRONT OF BUFFER
	POP	HL		;RESTORE HL
	RET

	;DATA
BUFPTR:	DS	2		;ADDRESS OF LAST CHARACTER IN BUFFER
CURLEN:	DS	1		;CURRENT LENGTH OF BUFFER
NGFLAG:	DS	1		;SIGN OF ORIGINAL VALUE

;
;
;	SAMPLE EXECUTION:
;
;

SC4E:
	;CONVERT 0 TO '0'
	LD	HL,BUFFER	;HL = BASE ADDRESS OF BUFFER
	LD	DE,0		;DE = 0
	CALL	BN2DEC		;CONVERT
				; BUFFER SHOULD = '0'

	;CONVERT 32767 TO '32767'
	LD	HL,BUFFER	;HL = BASE ADDRESS OF BUFFER
	LD	DE,32767	;DE = 32767
	CALL	BN2DEC		;CONVERT
				; BUFFER SHOULD = '32767'

	;CONVERT -32768 TO '-32768'
	LD	HL,BUFFER	;HL = BASE ADDRESS OF BUFFER
	LD	DE,-32768	;DE = -32768
	CALL	BN2DEC		;CONVERT
	JR	SC4E		; BUFFER SHOULD = '-32768'

BUFFER:	DS	7		;7-BYTE BUFFER

	END

'oshonsoft_bookmarks_and_breakpoints_info:,1582,1642,1672
